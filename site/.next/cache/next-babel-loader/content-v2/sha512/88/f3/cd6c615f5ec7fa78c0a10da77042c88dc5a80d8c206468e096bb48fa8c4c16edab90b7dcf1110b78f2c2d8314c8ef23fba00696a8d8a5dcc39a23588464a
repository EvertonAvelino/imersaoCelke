{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/everton/\\xC1rea de Trabalho/imersaoCelke/site/pages/cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, responseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              responseEnv = _context.sent;\n\n              if (responseEnv.error) {\n                console.log(responseEnv.message);\n              } else {\n                console.log('Dados cadastrados com sucesso');\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('erro ao enviar dados');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar minha meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"descri\\xE7\\xE3o\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"status:iniciada ou pendente\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cadastrar, \"hziF2xunrjoy4B8AOIcepWOgRjo=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["/home/everton/Área de Trabalho/imersaoCelke/site/pages/cadastrar.js"],"names":["React","useState","Cadastrar","name","description","status","meta","setMeta","onChangeInput","e","target","value","sendMeta","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","responseEnv","error","console","log","message"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nfunction Cadastrar(){\n\n    const [meta,setMeta] = useState({\n        name:'',\n        description:'',\n        status:'',\n    });\n    const onChangeInput = e => setMeta({...meta,[e.target.name]:e.target.value})\n    const sendMeta = async e =>{\n        e.preventDefault();\n        try{\n        //enviar dados para o banco de dados\n        const res = await fetch('http://localhost:8080/metas', {\n            method: 'POST',\n            body: JSON.stringify(meta),\n            headers: {'Content-Type':'application/json'}\n        });\n        const responseEnv = await res.json();\n        if(responseEnv.error){\n            console.log(responseEnv.message);\n        }else{\n            console.log('Dados cadastrados com sucesso');\n        }\n    }catch(err){\n        console.log('erro ao enviar dados');\n\n    }\n    }\n\n    return (\n    <div>\n        <h1>Cadastrar minha meta</h1>\n        <hr/>\n        <form onSubmit = {sendMeta}>\n            <label>Nome </label>\n            <input type =\"text\" name =\"name\" id=\"name\" placeholder=\"nome da meta\" onChange={onChangeInput}/>\n            <br></br>\n            <label>Descrição </label>\n            <input type =\"text\" name =\"description\" id=\"description\" placeholder=\"descrição\" onChange={onChangeInput}/>\n            <br></br>\n            <label>Status </label>\n            <input type =\"text\" name =\"status\" id=\"status\" placeholder=\"status:iniciada ou pendente\" onChange={onChangeInput}/>\n            <br></br>\n            <br></br>\n            <button type =\"submit\">Cadastrar</button>\n        </form>\n    </div>\n    \n    );\n}\nexport default Cadastrar;"]},"metadata":{},"sourceType":"module"}